{"ast":null,"code":"import _slicedToArray from \"/Users/sarvin/development/projects/geoparty/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sarvin/development/projects/geoparty/client/src/login/components/CreateUser.js\";\nimport React, { useState, useContext } from 'react';\nimport shopContext from '../../context/shop-context';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Segment, Header, Button } from 'semantic-ui-react';\n\nconst CreateUser = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bio = _useState6[0],\n        setBio = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        redirect = _useState8[0],\n        setRedirect = _useState8[1];\n\n  const context = useContext(shopContext);\n\n  const handleSubmit = () => {\n    fetch('http://localhost:3000/users', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        bio: bio\n      })\n    }).then(res => res.json()).then(user => {\n      if (user.id) {\n        setRedirect(true);\n      } else {\n        window.alert('Error submitting the form');\n      }\n    });\n  };\n\n  const renderRedirect = () => {\n    if (redirect) {\n      context.authenticatingUser(username, password);\n      return React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  };\n\n  const handleBioChange = e => {\n    if (e.target.value.length <= 150) {\n      setBio(e.target.value);\n    }\n  };\n\n  return React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, renderRedirect(), React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    label: \"username\",\n    placeholder: \"username\",\n    name: \"username\",\n    onChange: e => setUsername(e.target.value),\n    value: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    label: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    onChange: e => setPassword(e.target.value),\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Form.TextArea, {\n    label: \"bio\",\n    name: \"bio\",\n    placeholder: \"Tell us more about yourself...\",\n    onChange: handleBioChange,\n    value: bio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"violet\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default CreateUser;","map":{"version":3,"sources":["/Users/sarvin/development/projects/geoparty/client/src/login/components/CreateUser.js"],"names":["React","useState","useContext","shopContext","Redirect","Form","Segment","Header","Button","CreateUser","username","setUsername","password","setPassword","bio","setBio","redirect","setRedirect","context","handleSubmit","fetch","method","headers","body","JSON","stringify","then","res","json","user","id","window","alert","renderRedirect","authenticatingUser","handleBioChange","e","target","value","length","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport shopContext from '../../context/shop-context'\nimport { Redirect } from 'react-router-dom'\nimport { Form, Segment, Header, Button } from 'semantic-ui-react'\n\nconst CreateUser = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [bio, setBio] = useState('')\n  const [redirect, setRedirect] = useState(false)\n  const context = useContext(shopContext)\n\n  const handleSubmit = () => {\n    fetch('http://localhost:3000/users', {\n      method: \"POST\",\n      headers:{\"Content-Type\":\"application/json\", \"Accept\": \"application/json\"},\n      body:JSON.stringify({\n    \t\tusername: username,\n    \t\tpassword: password,\n        bio: bio\n    \t})\n    })\n    .then(res => res.json())\n    .then(user => {\n      if (user.id) {\n        setRedirect(true)\n      } else {\n        window.alert('Error submitting the form')\n      }\n    })\n  }\n\n  const renderRedirect = () => {\n    if (redirect) {\n      context.authenticatingUser(username, password)\n      return <Redirect to='/profile' />\n    }\n  }\n\n  const handleBioChange = (e) => {\n    if (e.target.value.length <= 150) {\n      setBio(e.target.value)\n    }\n  }\n\n  return (\n    <Segment>\n      {renderRedirect()}\n      <Header as='h2'>Create Account</Header>\n      <Form onSubmit={(e) => {\n        e.preventDefault()\n        handleSubmit()\n      }}>\n        <Form.Input\n          label=\"username\"\n          placeholder=\"username\"\n          name=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n        />\n        <Form.Input\n          label=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n        />\n        <Form.TextArea\n          label='bio'\n          name='bio'\n          placeholder='Tell us more about yourself...'\n          onChange={handleBioChange}\n          value={bio}\n        />\n        <Button color='violet' type='submit'>Submit</Button>\n      </Form>\n    </Segment>\n  )\n}\n\nexport default CreateUser\n"]},"metadata":{},"sourceType":"module"}