{"ast":null,"code":"var _jsxFileName = \"/Users/sarvin/development/projects/geoparty/client/src/trivia/containers/Trivia.js\";\nimport React, { useEffect, useContext } from 'react';\nimport Options from '../components/Options';\nimport FlashCard from './FlashCard';\nimport PreviousQuestions from './PreviousQuestions';\nimport shopContext from '../../context/shop-context';\nimport ProgressBar from '../components/ProgressBar';\nimport StarBar from './StarBar';\nimport Loading from '../../app/Loading';\nimport '../../css/Trivia.css';\nimport { Image } from 'semantic-ui-react';\n\nconst Trivia = () => {\n  const context = useContext(shopContext);\n  useEffect(() => {\n    context.fetchQuestions();\n  }, []);\n  return context.loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    id: \"trivia-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ProgressBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(StarBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(FlashCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Options, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(PreviousQuestions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Image, {\n    id: \"globe-image-1\",\n    src: require('../../images/globe.jpeg'),\n    alt: \"globe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"screen-filler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default Trivia;","map":{"version":3,"sources":["/Users/sarvin/development/projects/geoparty/client/src/trivia/containers/Trivia.js"],"names":["React","useEffect","useContext","Options","FlashCard","PreviousQuestions","shopContext","ProgressBar","StarBar","Loading","Image","Trivia","context","fetchQuestions","loading","require"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,sBAAP;AACA,SAASC,KAAT,QAAsB,mBAAtB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGV,UAAU,CAACI,WAAD,CAA1B;AAEAL,EAAAA,SAAS,CAAE,MAAM;AACfW,IAAAA,OAAO,CAACC,cAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACED,OAAO,CAACE,OAAR,GACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAGA;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,eAAV;AAA0B,IAAA,GAAG,EAAEC,OAAO,CAAC,yBAAD,CAAtC;AAAmE,IAAA,GAAG,EAAC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAJF;AAcD,CArBD;;AAuBA,eAAeJ,MAAf","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport Options from '../components/Options';\nimport FlashCard from './FlashCard';\nimport PreviousQuestions from './PreviousQuestions'\nimport shopContext from '../../context/shop-context';\nimport ProgressBar from '../components/ProgressBar';\nimport StarBar from './StarBar';\nimport Loading from '../../app/Loading'\nimport '../../css/Trivia.css'\nimport { Image } from 'semantic-ui-react'\n\nconst Trivia = () => {\n  const context = useContext(shopContext)\n\n  useEffect( () => {\n    context.fetchQuestions()\n  }, [])\n\n  return (\n    context.loading ?\n    <Loading />\n    :\n    <div id='trivia-container'>\n      <ProgressBar />\n      <StarBar />\n      <FlashCard />\n      <Options />\n      <PreviousQuestions />\n      <Image id='globe-image-1' src={require('../../images/globe.jpeg')} alt='globe' />\n      <div id='screen-filler'></div>\n    </div>\n  )\n}\n\nexport default Trivia\n"]},"metadata":{},"sourceType":"module"}