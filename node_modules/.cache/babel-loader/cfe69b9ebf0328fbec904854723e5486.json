{"ast":null,"code":"var _jsxFileName = \"/Users/sarvin/development/projects/geoparty-frontend/src/country/components/GeographyTable.js\";\nimport React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nconst GeographyTable = props => {\n  const _props$countryData = props.countryData,\n        location = _props$countryData.location,\n        area = _props$countryData.area,\n        area_rank = _props$countryData.area_rank,\n        comparison = _props$countryData.comparison,\n        border_countries = _props$countryData.border_countries,\n        climate = _props$countryData.climate,\n        terrain = _props$countryData.terrain,\n        lowest_point = _props$countryData.lowest_point,\n        highest_point = _props$countryData.highest_point,\n        natural_resources = _props$countryData.natural_resources;\n  return React.createElement(\"div\", {\n    id: \"country-geography\",\n    attached: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    selectable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Area\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, area, \" sq km\")), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Area Rank\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, area_rank)), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Location\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, location)), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Comparison\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, comparison)), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Border Countries\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, border_countries)), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Climate\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, climate)), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Terrain\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, terrain)), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Lowest Point\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, lowest_point, \"m\")), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Highest Point\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, highest_point, \"m\")), React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Natural Resources\"), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, natural_resources)))));\n};\n\nexport default GeographyTable;","map":{"version":3,"sources":["/Users/sarvin/development/projects/geoparty-frontend/src/country/components/GeographyTable.js"],"names":["React","Table","GeographyTable","props","countryData","location","area","area_rank","comparison","border_countries","climate","terrain","lowest_point","highest_point","natural_resources"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Table } from 'semantic-ui-react'\n\nconst GeographyTable = props => {\n   const { location, area, area_rank, comparison, border_countries, climate, terrain, lowest_point, highest_point, natural_resources } = props.countryData\n\n  return (\n    <div id='country-geography' attached='bottom'>\n      <Table striped selectable >\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>Area</Table.Cell>\n            <Table.Cell>{area} sq km</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Area Rank</Table.Cell>\n            <Table.Cell>{area_rank}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Location</Table.Cell>\n            <Table.Cell>{location}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Comparison</Table.Cell>\n            <Table.Cell>{comparison}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Border Countries</Table.Cell>\n            <Table.Cell>{border_countries}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Climate</Table.Cell>\n            <Table.Cell>{climate}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Terrain</Table.Cell>\n            <Table.Cell>{terrain}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Lowest Point</Table.Cell>\n            <Table.Cell>{lowest_point}m</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Highest Point</Table.Cell>\n            <Table.Cell>{highest_point}m</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>Natural Resources</Table.Cell>\n            <Table.Cell>{natural_resources}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n\nexport default GeographyTable\n"]},"metadata":{},"sourceType":"module"}