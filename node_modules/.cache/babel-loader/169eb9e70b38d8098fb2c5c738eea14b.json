{"ast":null,"code":"import _slicedToArray from \"/Users/sarvin/development/projects/geoparty/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sarvin/development/projects/geoparty/client/src/country/containers/Content.js\";\nimport React, { useState, useEffect } from 'react';\nimport Title from '../components/Title';\nimport Summary from '../components/Summary';\nimport ContentMenu from './ContentMenu';\nimport TableSwitch from './TableSwitch';\nimport Loading from '../../app/Loading.js';\n\nconst Content = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        countryData = _useState2[0],\n        setCountryData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"http://localhost:3000/countries/\".concat(props.activeCountry)).then(res => res.json()).then(country => {\n      setCountryData(country);\n      setLoading(false);\n    });\n  }, [props.activeCountry]);\n  return loading ? React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Title, {\n    countryName: countryData.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Summary, {\n    countryData: countryData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(ContentMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(TableSwitch, {\n    countryData: countryData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default Content;","map":{"version":3,"sources":["/Users/sarvin/development/projects/geoparty/client/src/country/containers/Content.js"],"names":["React","useState","useEffect","Title","Summary","ContentMenu","TableSwitch","Loading","Content","props","countryData","setCountryData","loading","setLoading","fetch","activeCountry","then","res","json","country","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBACaR,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,QAClBS,WADkB;AAAA,QACLC,cADK;;AAAA,qBAEKV,QAAQ,CAAC,KAAD,CAFb;AAAA;AAAA,QAElBW,OAFkB;AAAA,QAETC,UAFS;;AAIvBX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,2CAAoCL,KAAK,CAACM,aAA1C,EAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,OAAO,IAAI;AACfR,MAAAA,cAAc,CAACQ,OAAD,CAAd;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;AAMD,GARQ,EAQN,CAACJ,KAAK,CAACM,aAAP,CARM,CAAT;AAUF,SACEH,OAAO,GACP,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAGP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAEF,WAAW,CAACU,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,WAAW,EAAEV,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAJF;AAWD,CAzBD;;AA2BA,eAAeF,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Title from '../components/Title'\nimport Summary from '../components/Summary'\nimport ContentMenu from './ContentMenu'\nimport TableSwitch from './TableSwitch';\nimport Loading from '../../app/Loading.js'\n\nconst Content = (props) => {\n  const [countryData, setCountryData] = useState({})\n  const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n      setLoading(true)\n      fetch(`http://localhost:3000/countries/${props.activeCountry}`)\n      .then(res => res.json())\n      .then(country => {\n        setCountryData(country)\n        setLoading(false)\n      })\n    }, [props.activeCountry])\n\n  return(\n    loading ?\n    <Loading />\n    :\n    <div>\n      <Title countryName={countryData.name} />\n      <Summary countryData={countryData} />\n      <ContentMenu />\n      <TableSwitch countryData={countryData} />\n    </div>\n  )\n}\n\nexport default Content\n"]},"metadata":{},"sourceType":"module"}